class Game{constructor(e,t){this.container=document.querySelector(e),this.levels=t,this.currentLevelCount=0}createLevel(e,t){this.levels[this.currentLevelCount];const r=new e(...t);return this.render(r.render()),r}render(e){this.container.innerHTML="",this.container.insertAdjacentElement("afterbegin",e)}}class Card{constructor(e){this.card=document.createElement("div"),this.card.classList.add("card"),this.card.setAttribute("tabindex",1),this.id=e,this.card.id=this.id}}class Level{constructor(e){this.entries=e}findElementbyID(e,t){return t.find(t=>t.id==e)}renderCards(e,t,r="afterbegin"){const s=document.createElement("div");return s.classList.add("cards__wrapper"),t&&this.shuffleCard(e),e.forEach(e=>s.insertAdjacentElement(r,e.render())),s}shuffleCard(e){return e.sort(()=>.5-Math.random())}}class GameCompare extends Game{constructor(e){super("#container_compare",e)}start(){let e=this.createLevel();this.container.addEventListener("click",({target:t})=>{const r=t.closest("div.card");if(r){const t=e.findElementbyID(r.id);e.cards.forEach(s=>{if(t!==s){let n=e.checkPoints(t.points,s.points,e.sign);if(n||(r.classList.add("uncorrect"),setTimeout(()=>{r.classList.remove("uncorrect")},600)),n&&this.currentLevelCount<this.levels.length-1)this.currentLevelCount++,e=this.createLevel();else if(n&&this.currentLevelCount==this.levels.length-1){confirm("Молодець, ти переміг! \n Почати гру спочатку?")&&(this.currentLevelCount=0,e=this.createLevel())}}})}})}createLevel(){const e=this.levels[this.currentLevelCount],t=new LevelCompare(e.sign,e.entries,e.condition,e.extraInfo);return this.render(t.render()),t}render(e){super.render(e)}}class LevelCompare extends Level{constructor(e,t,r,s){super(t),this.sign=e,this.condition=r,this.extraInfo=s,this.cards=this.createCardsForLevel()}createCardsForLevel(){let e=0;return this.entries.map(t=>new CardCompare(t.img,t.count,e++,t.pointForOne))}render(){return this.levelWrapper=document.createElement("div"),this.levelWrapper.innerHTML=`<div class='level__condition'><p>${this.condition}<p>\n                                       <p class='level__extra'>${this.extraInfo}</p></div>`,this.levelWrapper.insertAdjacentElement("beforeend",this.renderCards()),this.levelWrapper}renderCards(){return super.renderCards(this.cards)}findElementbyID(e){return super.findElementbyID(e,this.cards)}checkPoints(e,t,r){if(e>t){if(">"==r)return!0}else if(e<t&&"<"==r)return!0;return e==t&&"="==r}}class CardCompare extends Card{constructor(e,t,r,s){super(r),this.count=t,this.cardImages=document.createElement("div"),this.cardImages.classList.add("card__images"),this.image=e,this.points=s*t}render(){for(let e=0;e<this.count;e++)this.cardImages.insertAdjacentHTML("afterbegin",`<img class='card-image' src='${this.image}'>`);return this.card.insertAdjacentElement("afterbegin",this.cardImages),this.card}}document.addEventListener("DOMContentLoaded",()=>{const e=document.querySelector("#container_compare");e&&fetch("./data/compareData.json").then(e=>e.json()).then((t,r)=>{if(t){new GameCompare(t).start()}r&&(e.innerHTML=r)}).catch(()=>{e.innerHTML="Упс...\nВиникла якась помилка....."})});class GameFigure extends Game{constructor(e){super("#container_figure"),this.cards=e,this.TiME_DELAY=700}render(){this.cards.forEach(e=>this.container.insertAdjacentElement("beforeend",e.render()))}checkEqualCards(e){const t=e.map(e=>e.card.dataset.name);return t[0]===t[1]&&(e.forEach(e=>e.addOpened()),!0)}removeActiveCards(e,t){return setTimeout(()=>e.forEach(e=>e.removeActive()),t?0:600),[]}processClickOnCards(){const e=this;this.container.addEventListener("click",(function({target:t}){let r=e.getActiveCards();const s=t.closest("div.card");if(s&&r.length<2&&s.classList.contains("card")&&(s.classList.contains("opened")||(e.findCard(s).addActive(),r=e.getActiveCards())),2===r.length){const t=e.checkEqualCards(r);r=e.removeActiveCards(r,t)}e.checkWin.bind(e)()}),!1)}shuffleCard(){this.cards.sort(()=>.5-Math.random())}startGame(){this.shuffleCard(),this.render(),this.processClickOnCards()}restartGame(){this.shuffleCard(),this.render()}findCard(e){return this.cards.find(t=>t.card.id==e.id)}getOpenedCards(){return this.cards.filter(e=>e.card.classList.contains("opened"))}getActiveCards(){return this.cards.filter(e=>e.card.classList.contains("active"))}checkWin(){const e=this;this.getOpenedCards().length===this.cards.length&&setTimeout((function(){confirm("Молодець, ти переміг! \n Почати гру спочатку?")&&(e.removeOpenedCard(),e.restartGame())}),e.TiME_DELAY)}removeOpenedCard(){this.cards.forEach(e=>e.card.classList.remove("opened"))}}class CardFigure extends Card{constructor(e,t,r,s,n){super(n),this.frontSide=document.createElement("div"),this.backSide=document.createElement("div"),this.frontSide.classList.add("front-side"),this.backSide.classList.add("back-side"),this.backSide.innerHTML='<div class="backTop"></div><p class="title"></p>',this.name=e,this.title=t,this.imgfront=r,this.imgback=s}addActive(){this.card.classList.add("active")}addOpened(){this.card.classList.add("opened")}removeActive(){this.card.classList.remove("active")}render(){return this.frontSide.style.backgroundImage=`url(${this.imgfront})`,this.backSide.querySelector("div.backTop").style.backgroundImage=`url(${this.imgback})`,this.backSide.querySelector("p.title").innerHTML=this.title,this.card.insertAdjacentElement("afterbegin",this.frontSide),this.card.insertAdjacentElement("beforeend",this.backSide),this.card.dataset.name=this.name,this.card}}document.addEventListener("DOMContentLoaded",()=>{const e=document.querySelector("#container_figure");e&&fetch("./data/figureData.json").then(e=>e.json()).then((t,r)=>{if(t){const e=[];t.forEach((t,r)=>e.push(new CardFigure(t[0],t[1],t[2],t[3],r)));new GameFigure(e).startGame()}r&&(e.innerHTML=r)}).catch(()=>{e.innerHTML="Упс...\nВиникла якась помилка....."})});class GameCounting extends Game{constructor(e){super("#container_counting",e)}start(){let e=this.createLevel(),t=0;this.container.addEventListener("click",({target:r})=>{const s=r.closest("div.card");if(s){const r=e.findElementbyID(s.id);t=r.addActiveState();const n=e.checkWin(t);if(n&&this.currentLevelCount<this.levels.length-1)this.currentLevelCount++,e=this.createLevel();else if(n&&this.currentLevelCount==this.levels.length-1){confirm("Молодець, ти переміг! \n Почати гру спочатку?")&&(this.currentLevelCount=0,e=this.createLevel())}}})}createLevel(){const e=this.levels[this.currentLevelCount],t=new LevelCount(e.range,e.entries);return this.render(t.render()),t}render(e){super.render(e)}}class LevelCount extends Level{constructor(e,t){super(t),this.rangeMin=e.min,this.rangeMax=e.max,this.cards=this.createCardsForLevel()}createCardsForLevel(){return this.entries.map((e,t)=>new CardCount(e.img,e.count,t))}getActiveCards(){return this.cards.filter(e=>e.isActive).sort((e,t)=>e.count-t.count)}clearActiveCards(){return this.cards.forEach(e=>e.clearActive())}checkWin(e){let t=!1;const r=this.getActiveCards();if(r.length>=2){const s=r[r.length-2];e.count-1!=s.count?this.clearActiveCards():r.length==this.cards.length&&(t=!0)}return t}render(){const e=this.renderRange();return this.levelWrapper=document.createElement("div"),this.levelWrapper.insertAdjacentElement("afterbegin",e),this.levelWrapper.insertAdjacentElement("beforeend",this.renderDisplayButton(e)),this.levelWrapper.insertAdjacentElement("beforeend",this.renderCards()),this.levelWrapper}createDisplayButton(e){const t=document.createElement("button");return t.classList.add("show_button"),t.addEventListener("click",()=>{e&&!e.classList.contains("display")&&(e.classList.add("display"),setTimeout(()=>{e.classList.remove("display")},3e3))}),t}shuffleCard(){super.shuffleCard(this.cards)}renderDisplayButton(e){return this.createDisplayButton(e)}renderRange(){const e=document.createElement("ul");e.classList.add("range_wrapper");for(let t=this.rangeMin;t<=this.rangeMax;t++){const r=document.createElement("li");r.classList.add("range__item","range__item-"+t),r.innerHTML=t,e.insertAdjacentElement("beforeend",r)}return e}renderCards(){return super.renderCards(this.cards,!0,"beforeend")}findElementbyID(e){return super.findElementbyID(e,this.cards)}}class CardCount extends Card{constructor(e,t,r){super(r),this.count=t,this.cardImages=document.createElement("div"),this.cardImages.classList.add("card__images"),this.image=e,this.isActive=!1}render(){for(let e=0;e<this.count;e++)this.cardImages.insertAdjacentHTML("afterbegin",`<img class='card-image' src='${this.image}'>`);return this.card.insertAdjacentElement("afterbegin",this.cardImages),this.card}addActiveState(){return this.isActive=!0,this.card.classList.add("active"),this}clearActive(){this.isActive=!1,this.card.classList.remove("active")}}document.addEventListener("DOMContentLoaded",()=>{const e=document.querySelector("#container_counting");e&&fetch("./data/countingData.json").then(e=>e.json()).then((t,r)=>{if(t){new GameCounting(t).start()}r&&(e.innerHTML=r)}).catch(()=>{e.innerHTML="Упс...\nВиникла якась помилка....."})});class GameNumbers extends Game{constructor(e){super("#container_numbers",e)}start(){let e=this.createLevel();this.container.addEventListener("click",({target:t})=>{const r=t.closest("div.card");if(r){let t=this.getActiveNumCards(e),s=this.getActiveImageCards(e);this.checkActiveCards(s,"image"),this.checkActiveCards(t,"num");const n=e.findElementbyID(r.id).addActive(r);this.addCheckedCards(r,n,s,t);let i=this.checkWin(e).length==e.cards.length;if(i&&this.currentLevelCount<this.levels.length-1)this.currentLevelCount++,setTimeout(()=>{e=this.createLevel()},1e3);else if(i&&this.currentLevelCount==this.levels.length-1){confirm("Молодець, ти переміг! \n Почати гру спочатку?")&&(this.currentLevelCount=0,setTimeout(()=>{e=this.createLevel()},1e3))}}})}getActiveNumCards(e){return e.cards.filter(e=>1==e.isActive.num)}getActiveImageCards(e){return e.cards.filter(e=>1==e.isActive.image)}clearActiveCards(e,t){return e.map(e=>{e.isActive[t]=!1,e.getDOMItem(t).classList.remove("active")})}checkWin(e){return e.cards.filter(e=>1==e.isChecked)}addCheckedCards(e,t,r,s){let n;n=e.classList.contains("card__number")?r.find(e=>e.id==t.id):s.find(e=>e.id==t.id),n&&(t.isChecked=!0,t.blockCard())}checkActiveCards(e,t){e.length>=1&&(e=this.clearActiveCards(e,t))}createLevel(){const e=this.levels[this.currentLevelCount],t=new LevelNumbers(e.entries,e.mix);return this.render(t.render()),t}render(e){super.render(e)}}class LevelNumbers extends Level{constructor(e,t){super(e),this.mix=t,this.cards=this.createCard()}render(){return this.levelWrapper=document.createElement("div"),this.levelWrapper.classList.add("level_wrapper"),this.levelWrapper.insertAdjacentElement("afterbegin",this.renderCardsNumbers()),this.levelWrapper.insertAdjacentElement("beforeend",this.renderCardsImages()),this.levelWrapper}findElementbyID(e){return this.cards.find(t=>t.id==e)}shuffleCards(e){return super.shuffleCard(e)}renderCardsNumbers(){const e=document.createElement("div");e.classList.add("level_column");let t=this.cards.map(e=>e.renderCardNumber());return this.mix.mixNumer&&(t=this.shuffleCards(t)),t.forEach(t=>e.insertAdjacentElement("beforeend",t)),e}renderCardsImages(){const e=document.createElement("div");e.classList.add("right_column");let t=this.cards.map(e=>e.renderCardImage());return this.mix.mixImage&&(t=this.shuffleCards(t)),t.forEach(t=>e.insertAdjacentElement("beforeend",t)),e}createCard(){return this.entries.map((e,t)=>new CardNumbers(e.img,e.backgroundCheck,e.count,t))}}class CardNumbers{constructor(e,t,r,s){this.count=r,this.id=s,this.cardImages=document.createElement("div"),this.cardImages.classList.add("card__images","card"),this.cardImages.setAttribute("tabindex",1),this.cardNumber=document.createElement("div"),this.cardNumber.classList.add("card__number","card"),this.cardNumber.setAttribute("tabindex",1),this.image=e,this.cardImages.id=s,this.cardNumber.id=s,this.color=t,this.isActive={num:!1,image:!1},this.isChecked=!1}getDOMItem(e){return"image"==e?this.cardImages:"num"==e?this.cardNumber:void 0}renderCardImage(){for(let e=0;e<this.count;e++)this.cardImages.insertAdjacentHTML("afterbegin",`<img class='card-image' src='${this.image}'>`);return this.cardImages}renderCardNumber(){return this.cardNumber.innerHTML=this.count,this.cardNumber}blockCard(){this.cardNumber.style.backgroundColor=this.color,this.cardImages.style.backgroundColor=this.color}addActive(e){return e.classList.contains("card__number")?(this.isActive.num=!0,this.cardNumber.classList.add("active")):e.classList.contains("card__images")&&(this.isActive.image=!0,this.cardImages.classList.add("active")),this}}document.addEventListener("DOMContentLoaded",()=>{const e=document.querySelector("#container_numbers");e&&fetch("./data/numbersData.json").then(e=>e.json()).then((t,r)=>{if(t){new GameNumbers(t).start()}r&&(e.innerHTML=r)}).catch(()=>{e.innerHTML="Упс...\nВиникла якась помилка....."})});